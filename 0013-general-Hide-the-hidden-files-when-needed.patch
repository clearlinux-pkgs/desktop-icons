From e3aa87f79e294f95f6d03d4269ae8e572998931d Mon Sep 17 00:00:00 2001
From: Sergio Costas <raster@rastersoft.com>
Date: Thu, 22 Nov 2018 00:57:01 +0100
Subject: [PATCH 13/55] general: Hide the hidden files when needed

Hidden files are those that start with a dot. These files shouldn't
be shown if the key 'show-hidden' from '/org/gtk/settings/file-chooser'
if 'false'. Unfortunately, the current code doesn't honor this flag and
shows all the files in the desktop, no matter whether they are hidden
or not.

This patch fixes this by checking that flag and the first character in
the visible file name to decide whether a file must be hide or not. It
also connects to the 'changed' signal to ensure that a change in the
settings flag will be also honored.

https://gitlab.gnome.org/World/ShellExtensions/desktop-icons/issues/46
---
 desktopManager.js | 18 +++++++++++++++++-
 fileItem.js       |  5 ++++-
 prefs.js          |  4 ++++
 3 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/desktopManager.js b/desktopManager.js
index f946e5b..b6cfb7b 100644
--- a/desktopManager.js
+++ b/desktopManager.js
@@ -73,7 +73,11 @@ var DesktopManager = class {
         this._addDesktopIcons();
         this._monitorDesktopFolder();
 
-        Prefs.settings.connect('changed', () => this._recreateDesktopIcons());
+        this.settingsId = Prefs.settings.connect('changed', () => this._recreateDesktopIcons());
+        this.gtkSettingsId = Prefs.gtkSettings.connect('changed', (obj, key) => {
+            if (key == 'show-hidden')
+                this._recreateDesktopIcons();
+        });
 
         this._selection = new Set();
         this._inDrag = false;
@@ -484,6 +488,7 @@ var DesktopManager = class {
     }
 
     _layoutChildren() {
+        let showHidden = Prefs.gtkSettings.get_boolean('show-hidden');
         /*
          * Paint the icons in two passes:
          * * first pass paints those that have their coordinates defined in the metadata
@@ -494,6 +499,8 @@ var DesktopManager = class {
                 continue;
             if (fileItem.state != FileItem.State.NORMAL)
                 continue;
+            if (!showHidden && fileItem.isHidden)
+                continue;
             this._addFileItemCloseTo(fileItem);
         }
 
@@ -502,6 +509,8 @@ var DesktopManager = class {
                 continue;
             if (fileItem.state != FileItem.State.NORMAL)
                 continue;
+            if (!showHidden && fileItem.isHidden)
+                continue;
             this._addFileItemCloseTo(fileItem);
         }
 
@@ -572,6 +581,13 @@ var DesktopManager = class {
             this._monitorDesktopDir.cancel();
         this._monitorDesktopDir = null;
 
+        if (this.settingsId)
+            Prefs.settings.disconnect(this.settingsId);
+        this.settingsId = 0;
+        if (this.gtkSettingsId)
+            Prefs.gtkSettings.disconnect(this.gtkSettingsId);
+        this.gtkSettingsId = 0;
+
         if (this._layoutChildrenId)
             GLib.source_remove(this._layoutChildrenId);
         this._layoutChildrenId = 0;
diff --git a/fileItem.js b/fileItem.js
index f2c66b1..699a40b 100644
--- a/fileItem.js
+++ b/fileItem.js
@@ -81,7 +81,6 @@ var FileItem = class {
         this._isSpecial = this._fileExtra != Prefs.FILE_TYPE.NONE;
         this._attributeContentType = fileInfo.get_content_type();
         this._isDesktopFile = this._attributeContentType == 'application/x-desktop';
-        this._attributeHidden = fileInfo.get_is_hidden();
         this._isSymlink = fileInfo.get_is_symlink();
         this._fileUri = this._file.get_uri();
         this._filePath = this._file.get_path();
@@ -296,6 +295,10 @@ var FileItem = class {
         return this._file;
     }
 
+    get isHidden() {
+        return this._fileInfo.get_is_hidden();
+    }
+
     _createEmblemedStIcon(icon, iconName) {
 
         if (icon == null) {
diff --git a/prefs.js b/prefs.js
index 0e98c08..2979a5a 100644
--- a/prefs.js
+++ b/prefs.js
@@ -30,6 +30,7 @@ Gettext.bindtextdomain('desktop-icons', ExtensionUtils.getCurrentExtension().pat
 var _ = Gettext.gettext;
 
 const SCHEMA_NAUTILUS = 'org.gnome.nautilus.preferences';
+const SCHEMA_GTK = 'org.gtk.Settings.FileChooser';
 const SCHEMA = 'org.gnome.shell.extensions.desktop-icons';
 
 const ICON_SIZE = { 'small': 48, 'standard': 64, 'large': 96, 'huge': 128 };
@@ -43,12 +44,15 @@ var FILE_TYPE = {
 }
 
 var nautilusSettings;
+var gtkSettings;
 var settings;
 // This is already in Nautilus settings, so it should not be made tweakable here
 var CLICK_POLICY_SINGLE = false;
 
 function init() {
     let schemaSource = GioSSS.get_default();
+    let schemaGtk = schemaSource.lookup(SCHEMA_GTK, true);
+    gtkSettings = new Gio.Settings({ settings_schema: schemaGtk });
     let schemaObj = schemaSource.lookup(SCHEMA_NAUTILUS, true);
     if (!schemaObj) {
         nautilusSettings = null;
-- 
2.20.0

