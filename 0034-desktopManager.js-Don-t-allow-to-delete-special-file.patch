From ce541f451e8d60a917356fd16414941efc4a8513 Mon Sep 17 00:00:00 2001
From: Sergio Costas <raster@rastersoft.com>
Date: Thu, 29 Nov 2018 21:39:31 +0100
Subject: [PATCH 34/55] desktopManager.js: Don't allow to delete special files

Until now, pressing Delete with the Trash or the personal folder would
try to delete them. Also selecting several files than include them and
using delete, cut or copy.

This patch avoids this, thus ensuring that the Trash or the personal
folder can't be deleted.

https://gitlab.gnome.org/World/ShellExtensions/desktop-icons/issues/65
---
 desktopManager.js |  8 ++++++++
 fileItem.js       | 13 ++++++++++---
 2 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/desktopManager.js b/desktopManager.js
index ada557a..ebfb8d7 100644
--- a/desktopManager.js
+++ b/desktopManager.js
@@ -240,6 +240,14 @@ var DesktopManager = class {
         this._monitorDesktopDir.connect('changed', (obj, file, otherFile, eventType) => this._updateDesktopIfChanged(file, otherFile, eventType));
     }
 
+    checkIfSpecialFilesAreSelected() {
+        for(let fileItem of this._selection) {
+            if (fileItem.isSpecial)
+                return true;
+        }
+        return false;
+    }
+
     _updateDesktopIfChanged (file, otherFile, eventType) {
         let {
             DELETED, MOVED_IN, MOVED_OUT, CREATED, RENAMED, CHANGES_DONE_HINT, ATTRIBUTE_CHANGED
diff --git a/fileItem.js b/fileItem.js
index b2fdf84..b7f6d38 100644
--- a/fileItem.js
+++ b/fileItem.js
@@ -442,10 +442,10 @@ var FileItem = class {
         this._menu.addAction(_('Open'), () => this.doOpen());
         switch (this._fileExtra) {
         case Prefs.FILE_TYPE.NONE:
-            this._menu.addAction(_('Cut'), () => this._onCutClicked());
-            this._menu.addAction(_('Copy'), () => this._onCopyClicked());
+            this._actionCut = this._menu.addAction(_('Cut'), () => this._onCutClicked());
+            this._actionCopy = this._menu.addAction(_('Copy'), () => this._onCopyClicked());
             this._menu.addAction(_('Rename'), () => this.doRename());
-            this._menu.addAction(_('Move to Trash'), () => this._onMoveToTrashClicked());
+            this._actionTrash = this._menu.addAction(_('Move to Trash'), () => this._onMoveToTrashClicked());
             break;
         case Prefs.FILE_TYPE.USER_DIRECTORY_TRASH:
             this._menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
@@ -470,6 +470,13 @@ var FileItem = class {
             if (!this.isSelected)
                 this.emit('selected', false, true);
             this._menu.toggle();
+            let specialFilesSelected = Extension.desktopManager.checkIfSpecialFilesAreSelected();
+            if (this._actionCut)
+                this._actionCut.setSensitive(!specialFilesSelected);
+            if (this._actionCopy)
+                this._actionCopy.setSensitive(!specialFilesSelected);
+            if (this._actionTrash)
+                this._actionTrash.setSensitive(!specialFilesSelected);
             return Clutter.EVENT_STOP;
         } else if (button == 1) {
             if (event.get_click_count() == 1) {
-- 
2.20.0

